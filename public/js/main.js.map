{"version":3,"sources":["./src/app/components/product/product-read2/product-read2-datasource.ts","./src/app/components/product/product-read2/product-read2.component.ts","./src/app/components/product/product-read2/product-read2.component.html","./src/environments/environment.ts","./src/app/views/product-crud/product-crud.component.ts","./src/app/views/product-crud/product-crud.component.html","./src/app/components/product/product-create/product-create.component.ts","./src/app/components/product/product-create/product-create.component.html","./src/app/components/product/product-update/product-update.component.ts","./src/app/components/product/product-update/product-update.component.html","./src/app/components/product/product-read/product-read.component.ts","./src/app/components/product/product-read/product-read.component.html","./src/app/components/product/product.service.ts","./src/app/components/template/footer/footer.component.ts","./src/app/components/template/footer/footer.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/template/header/header.service.ts","./src/app/app.module.ts","./src/app/directives/red.directive.ts","./src/app/components/template/nav/nav.component.ts","./src/app/components/template/nav/nav.component.html","./src/app/directives/for.directive.ts","./src/app/components/template/header/header.component.ts","./src/app/components/template/header/header.component.html","./src/app/components/product/product-delete/product-delete.component.ts","./src/app/components/product/product-delete/product-delete.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Product } from './../product.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: Product[] = [\n  {id: 1, name: 'Hydrogen', price: 99.45},\n  {id: 2, name: 'Helium', price: 99.45},\n  {id: 3, name: 'Lithium', price: 99.45},\n  {id: 4, name: 'Beryllium', price: 99.45},\n  {id: 5, name: 'Boron', price: 99.45},\n  {id: 6, name: 'Carbon', price: 99.45},\n  {id: 7, name: 'Nitrogen', price: 99.45},\n  {id: 8, name: 'Oxygen', price: 99.45},\n  {id: 9, name: 'Fluorine', price: 99.45},\n  {id: 10, name: 'Neon', price: 99.45},\n  {id: 11, name: 'Sodium', price: 99.45},\n  {id: 12, name: 'Magnesium', price: 99.45},\n  {id: 13, name: 'Aluminum', price: 99.45},\n  {id: 14, name: 'Silicon', price: 99.45},\n  {id: 15, name: 'Phosphorus', price: 99.45},\n  {id: 16, name: 'Sulfur', price: 99.45},\n  {id: 17, name: 'Chlorine', price: 99.45},\n  {id: 18, name: 'Argon', price: 99.45},\n  {id: 19, name: 'Potassium', price: 99.45},\n  {id: 20, name: 'Calcium', price: 99.45},\n];\n\n/**\n * Data source for the ProductRead2 view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class ProductRead2DataSource extends DataSource<Product> {\n  data: Product[] = EXAMPLE_DATA;\n  paginator: MatPaginator;\n  sort: MatSort;\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<Product[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: Product[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: Product[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import { Product } from './../product.model';\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { ProductRead2DataSource } from './product-read2-datasource';\n\n@Component({\n  selector: 'app-product-read2',\n  templateUrl: './product-read2.component.html',\n  styleUrls: ['./product-read2.component.css']\n})\nexport class ProductRead2Component implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<Product>;\n  dataSource: ProductRead2DataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name', 'price'];\n\n  ngOnInit() {\n    this.dataSource = new ProductRead2DataSource();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <!-- price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Preço</th>\n      <td mat-cell *matCellDef=\"let row\">R$ {{row.price}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"10\"\n      [pageSizeOptions]=\"[5, 10, 20, 30, 50, 100, 250]\">\n  </mat-paginator>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API: 'http://127.0.0.1:8000/api/products'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HeaderService } from \"./../../components/template/header/header.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-product-crud\",\n  templateUrl: \"./product-crud.component.html\",\n  styleUrls: [\"./product-crud.component.css\"],\n})\nexport class ProductCrudComponent implements OnInit {\n  constructor(private router: Router, private headerService: HeaderService) {\n    headerService.headerData = {\n      title: \"Cadastro de Produtos\",\n      icon: \"storefront\",\n      routeUrl: \"/products\",\n    };\n  }\n\n  ngOnInit(): void {}\n\n  navigateToProductCreate(): void {\n    this.router.navigate([\"/products/create\"]);\n  }\n}\n","<button color=\"primary\" mat-raised-button (click)=\"navigateToProductCreate()\" >\n    Novo Produto\n</button>\n\n<app-product-read></app-product-read>","import { Product } from './../product.model';\nimport { Router } from '@angular/router';\nimport { ProductService } from './../product.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  product: Product = {\n    name: '',\n    price: null\n  }\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  createProduct(): void {\n    this.productService.create(this.product).subscribe(() => {\n      this.productService.showMessage('Produto criado!')\n      this.router.navigate(['/products'])\n    })\n    \n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\" [(ngModel)]=\"product.price\" name=\"price\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"createProduct()\" color=\"primary\">\n        Salvar\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\" color=\"\">\n        Cancelar\n    </button>\n</mat-card>","import { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from './../product.service';\nimport { Product } from './../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent implements OnInit {\n\n  product: Product\n\n  constructor(private productService: ProductService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product\n    })\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.product).subscribe(() => {\n      this.productService.showMessage('Produto Atualizado com Sucesso!')\n      this.router.navigate(['/products'])\n    })\n  }\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" [(ngModel)]=\"product.name\" name=\"name\">\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\" [(ngModel)]=\"product.price\" name=\"price\">\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"updateProduct()\" color=\"primary\">\n        Atualizar\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\" color=\"\">\n        Cancelar\n    </button>\n</mat-card>","import { ProductService } from '../product.service';\nimport { Product } from '../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-read',\n  templateUrl: './product-read.component.html',\n  styleUrls: ['./product-read.component.css']\n})\nexport class ProductReadComponent implements OnInit {\n\n  products: Product[]\n  displayedColumns = ['id', 'name', 'price', 'action']\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.productService.read().subscribe(products => {\n      this.products = products\n      console.log(products)\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n    <table mat-table [dataSource]=\"products\" class=\"full-width-table\">\n      <!-- Id Column -->\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Id</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n  \n      <!-- Name Column -->\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n      </ng-container>\n  \n      <!-- price Column -->\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Preço</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.price | currency: 'BRL'}}</td>\n      </ng-container>\n\n       <!-- Action Column -->\n       <ng-container matColumnDef=\"action\">\n        <th mat-header-cell *matHeaderCellDef>Ações</th>\n        <td mat-cell *matCellDef=\"let row\">\n            <a routerLink=\"/products/update/{{ row.id }}\">\n                <i class=\"material-icons edit\">edit</i>\n            </a>\n            <a routerLink=\"/products/delete/{{ row.id }}\">\n                <i class=\"material-icons delete\">delete</i>\n            </a>\n        </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  \n    <!-- <mat-paginator #paginator\n        [length]=\"dataSource?.data.length\"\n        [pageIndex]=\"0\"\n        [pageSize]=\"10\"\n        [pageSizeOptions]=\"[5, 10, 20, 30, 50, 100, 250]\">\n    </mat-paginator> -->\n  </div>\n  \n","import { Product } from \"./product.model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport { EMPTY, Observable } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProductService {\n  baseUrl = environment.API;\n  // baseUrl = \"http://localhost:3001/products\";\n\n  constructor(private snackBar: MatSnackBar, private http: HttpClient) {}\n\n  showMessage(msg: string, isError: boolean = false): void {\n    this.snackBar.open(msg, \"X\", {\n      duration: 2000,\n      horizontalPosition: \"center\",\n      verticalPosition: \"bottom\",\n      panelClass: isError ? [\"msg-error\"] : [\"msg-success\"],\n    });\n  }\n\n  errorHandler(e: any): Observable<any> {\n    this.showMessage(\"Ocorreu um erro!\", true);\n    return EMPTY;\n  }\n\n  create(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.baseUrl, product).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  read(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.baseUrl).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  readById(id: string): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.get<Product>(url).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  update(product: Product): Observable<Product> {\n    const url = `${this.baseUrl}/${product.id}`;\n    return this.http.put<Product>(url, product).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n\n  delete(id: number): Observable<Product> {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.delete<Product>(url).pipe(\n      map((obj) => obj),\n      catchError((e) => this.errorHandler(e))\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido com\n        <i class=\"material-icons red v-middle\" appRed>\n            favorite\n        </i>\n        por <strong>Cod<span appRed >3</span>r</strong>\n    </span>\n</mat-toolbar>\n","import { HeaderService } from \"./../../components/template/header/header.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private headerService: HeaderService) {\n    headerService.headerData = {\n      title: \"Início\",\n      icon: \"home\",\n      routeUrl: \"\",\n    };\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-card class=\"home mat-elevation-z3\">\n    <mat-card-title class=\"title\">\n        Bem Vindo!\n    </mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n        Sistema para exemplificar a construção de um cadastro em Angular\n    </mat-card-subtitle>\n</mat-card>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\n\nexport class AppComponent {\n  \n}\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { HeaderData } from \"./../footer/header-data.model\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HeaderService {\n  private _headerData = new BehaviorSubject<HeaderData>({\n    title: \"Início\",\n    icon: \"home\",\n    routeUrl: \"\",\n  });\n\n  constructor() {}\n\n  get headerData(): HeaderData {\n    return this._headerData.value;\n  }\n\n  set headerData(headerData: HeaderData) {\n    this._headerData.next(headerData);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { LOCALE_ID, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './components/template/header/header.component';\n\nimport { FooterComponent } from './components/template/footer/footer.component';\nimport { NavComponent } from './components/template/nav/nav.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule} from '@angular/material/sidenav';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatListModule} from '@angular/material/list';\nimport { MatButtonModule} from '@angular/material/button';\nimport { HomeComponent } from './views/home/home.component';\nimport { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { RedDirective } from './directives/red.directive';\nimport { ForDirective } from './directives/for.directive';\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ProductReadComponent } from './components/product/product-read/product-read.component';\nimport { ProductRead2Component } from './components/product/product-read2/product-read2.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { registerLocaleData } from '@angular/common';\nimport localePt from '@angular/common/locales/pt';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\n\nregisterLocaleData(localePt);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    NavComponent,\n    HomeComponent,\n    ProductCrudComponent,\n    RedDirective,\n    ForDirective,\n    ProductCreateComponent,\n    ProductReadComponent,\n    ProductRead2Component,\n    ProductUpdateComponent,\n    ProductDeleteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    HttpClientModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [{\n    provide: LOCALE_ID,\n    useValue: 'pt-BR'\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appRed]'\n})\nexport class RedDirective {\n\n  constructor(private el: ElementRef) {\n    el.nativeElement.style.color = '#e35e6b'\n   }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"container\">\n    <mat-sidenav class=\"sidenav\" mode=\"side\" opened fixedInViewport=\"true\" fixedTopGap=\"64\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Início\n            </a>\n            <a mat-list-item routerLink=\"/products\">\n                <i class=\"material-icons\">\n                    storefront\n                </i>\n                Produtos\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"content\">\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[myFor]'\n})\nexport class ForDirective implements OnInit {\n\n  @Input('myForEm') numbers: number[]\n\n  constructor(private container: ViewContainerRef, private template: TemplateRef<any>) {\n\n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    for(let number of this.numbers) {\n      this.container.createEmbeddedView(this.template, { $implicit: number});\n    }\n    console.log(this.numbers)\n  }\n}\n","import { HeaderService } from \"./header.service\";\nimport { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private headerService: HeaderService) {}\n\n  ngOnInit(): void {}\n\n  get title(): string {\n    return this.headerService.headerData.title;\n  }\n\n  get icon(): string {\n    return this.headerService.headerData.icon;\n  }\n\n  get routeUrl(): string {\n    return this.headerService.headerData.routeUrl;\n  }\n}\n","<mat-toolbar class=\"header mat-elevation-z4\">\n    <span>\n        <a href=\"\" routerLink=\"/\">\n            <img class=\"logo\" src=\"assets/img/logo.png\" alt=\"logo\">\n        </a>\n    </span>\n    <span class=\"title-group\">\n        <a routerLink=\"{{ routeUrl }}\">\n            <i class=\"material-icons\">\n                {{ icon }}\n            </i>\n            {{ title }}\n        </a>\n    </span>\n</mat-toolbar>","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from './../product.service';\nimport { Product } from './../product.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  product: Product\n\n  constructor(\n    private productService: ProductService, \n    private router: Router, \n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.productService.readById(id).subscribe(product => {\n      this.product = product\n    })\n  }\n\n  deleteProduct(): void {\n    this.productService.delete(this.product.id).subscribe(() => {\n      this.productService.showMessage('Produto excluido com sucesso!')\n      this.router.navigate([\"products\"])\n    })\n  }\n\n\n\n  cancel(): void {\n    this.router.navigate(['/products'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Excluir Produto</mat-card-title>\n    <form>\n        <mat-form-field>\n            <input matInput placeholder=\"Nome\" [value]=\"product.name\" name=\"name\" disabled>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Preço (R$)\" [value]=\"product.price\" name=\"price\" disabled>\n        </mat-form-field>\n    </form>\n    <button mat-raised-button (click)=\"deleteProduct()\" color=\"warn\">\n        Excluir\n    </button>\n    \n    <button mat-raised-button (click)=\"cancel()\" color=\"\">\n        Cancelar\n    </button>\n</mat-card>","import { ProductDeleteComponent } from './components/product/product-delete/product-delete.component';\nimport { ProductUpdateComponent } from './components/product/product-update/product-update.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent} from './views/home/home.component';\nimport  { ProductCrudComponent } from './views/product-crud/product-crud.component';\nimport { ProductCreateComponent } from './components/product/product-create/product-create.component';\n\nconst routes: Routes = [{\n  path: \"\",\n  component: HomeComponent\n}, {\n  path: \"products\",\n  component: ProductCrudComponent\n}, {\n  path: \"products/create\",\n  component: ProductCreateComponent\n}, {\n  path: \"products/update/:id\",\n  component: ProductUpdateComponent\n},{\n  path: \"products/delete/:id\",\n  component: ProductDeleteComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}